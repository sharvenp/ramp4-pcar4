import{aO as p,l as a,j as o,r as g,e as s,y as m,n as l}from"./main-95e6e76d.js";import{f as c,u as n}from"./LayerView-ed1c4eb4.js";import{i as d}from"./GraphicContainer-27cca931.js";import{a as u}from"./GraphicsView2D-b3551d69.js";import"./preload-helper-388ac9d5.js";import"./Container-0472060a.js";import"./definitions-19bfb61c.js";import"./enums-64ab819c.js";import"./Texture-543e779a.js";import"./color-5d0ed0f1.js";import"./enums-55085e26.js";import"./VertexElementDescriptor-2925c6af.js";import"./BaseGraphicContainer-aaf0573f.js";import"./FeatureContainer-e4153057.js";import"./AttributeStoreView-1650b9d1.js";import"./TiledDisplayObject-c4471bac.js";import"./visualVariablesUtils-a5460606.js";import"./visualVariablesUtils-0017418d.js";import"./VertexArrayObject-5d37e7ae.js";import"./TileContainer-d9ea6abb.js";import"./WGLContainer-da7a04c6.js";import"./ProgramTemplate-0023d51c.js";import"./MaterialKey-0dd846d5.js";import"./utils-6d343beb.js";import"./StyleDefinition-fbc907c2.js";import"./config-1337d16e.js";import"./GeometryUtils-dd03fc25.js";import"./earcut-61f7b102.js";import"./vec3f32-ad1dc57f.js";import"./ExpandedCIM-7c9c1e71.js";import"./BidiEngine-836b7ef6.js";import"./GeometryUtils-53652037.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-ed808b6c.js";import"./floatRGBA-ece7f9ae.js";import"./normalizeUtilsSync-cecab2b1.js";import"./projectionSupport-8db80048.js";import"./json-48e3ea08.js";import"./Matcher-f3f18ef2.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-f4eb8161.js";import"./devEnvironmentUtils-f2a1f21e.js";import"./schemaUtils-4fb16fce.js";import"./util-8f79f22b.js";import"./ComputedAttributeStorage-47e0a270.js";import"./arcadeTimeUtils-f66192b0.js";import"./executionError-c1d13a98.js";import"./centroid-b78488a5.js";const w={remove(){},pause(){},resume(){}};let e=class extends c(n){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new u({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new d(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler))}detach(){this.container.removeAllChildren(),this.graphicsView=p(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}async fetchPopupFeatures(i){return this.graphicsView?this.graphicsView.hitTest(i).filter(t=>!!t.popupTemplate):[]}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof a?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):o.isCollection(i)&&i.length>0&&(t=i.map(h=>h&&h.uid).toArray());const r=t?.filter(g);return r?.length?(this._addHighlight(r),{remove:()=>this._removeHighlight(r)}):w}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t);this._highlightIds.set(t,r+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t)-1;r===0?this._highlightIds.delete(t):this._highlightIds.set(t,r)}this._updateHighlight()}_updateHighlight(){this.graphicsView?.setHighlight(Array.from(this._highlightIds.keys()))}};s([m()],e.prototype,"graphicsView",void 0),e=s([l("esri.views.2d.layers.GraphicsLayerView2D")],e);const li=e;export{li as default};
